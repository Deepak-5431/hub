# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserEntity {
  id: ID!
  email: String!
  name: String
  username: String
  avatar: String
  bio: String
  website: String
  location: String
  isVerified: Boolean!
  isPrivate: Boolean!
  isActive: Boolean!
  followersCount: Float!
  followingCount: Float!
  postsCount: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  lastActiveAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResponseDto {
  user: UserEntity!
  accessToken: String!
  refreshToken: String!
  expiresIn: Float!
}

type Query {
  me: UserEntity!
  users(skip: Float = 0, take: Float = 10): [UserEntity!]!
  userById(id: String!): UserEntity!
  getConversations(userId: String!): [String!]!
  getConversationMessages(conversationId: String!): [String!]!
  getUnreadCount(userId: String!): Float!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): UserEntity!
  updateMyProfile(updateUserInput: UpdateUserInput!): UserEntity!
  updateUser(userId: String!, updateUserInput: UpdateUserInput!): UserEntity!
  changePassword(currentPassword: String!, newPassword: String!): UserEntity!
  register(registerInput: CreateUserInput!): AuthResponseDto!
  login(loginInput: LoginInput!): AuthResponseDto!
  refreshTokens(refreshTokenInput: RefreshTokenInput!): AuthResponseDto!
  logout: Boolean!
  createConversation(input: CreateConversationInput!): String!
  sendMessage(input: SendMessageInput!): String!
  markAsRead(conversationId: String!, userId: String!): Boolean!
}

input CreateUserInput {
  email: String!
  name: String
  password: String!
}

input UpdateUserInput {
  email: String
  name: String
  password: String
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshTokenInput {
  refreshToken: String!
}

input CreateConversationInput {
  participantIds: [String!]!
  title: String
  type: String
}

input SendMessageInput {
  conversationId: String!
  content: String!
  type: String = "TEXT"
  repliedToId: String
}